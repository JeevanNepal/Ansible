Conditions:
----------
Whenever we have different scenarios, we put or use conditions accordingly to the scenario.

--- # My Condition Playbook
- hosts: demo
  user: ansible
become: yes
  connection: ssh
  tasks:
    - name: install apache on debian
command: apt-get -y install apache2
when: ansible_os_family=="Debian"
    - name: install apache on redhat
command: yum -y install httpd
when: ansible_os_family=="Redhat"





Vaults:
------
Ansible allows keeping sensative data such as password or keys in encryptes files rather than a plaintext in our playbooks.


Creating a new encrypted Playbook:
----------------------------------
ansible-vault create vault.yml





Editning in encrypted Playbook:
------------------------------
ansible-vault edit vault.yml(filename)




To Change Password:
------------------
ansible-vault rekey filename.



To Encrypt an existing files:
--------------------------
ansible-vault encrypt filname.



To decrypt an existing file:
---------------------------
ansible-vault decrypt filename.




Roles:
------
We cna use two techniques for reusing a set of tasks:
1. Includes &
2. Roles.

Roles are good for orginising tasks and encapsulating data needed to accomplished those tasks.

Types of Roles:

- Default: It stores the data about role/application. Default variables.

- Files: It contains files need to be transferred to the remote VM (static files).

- Handlers: They are triggered or tasks we can segerate all the handlers required in playbook.

- Meta: This directories contains files that establish rles dependencies.
Eg: Author nae, supportted platform or dependencies if any.

- Tasks: It contains all the tasks that is normally in the playbook.

- Vars: Variables for the role can be sprcified in this directory and used in our confirguration files both vars and default store variables.


[ansible@ip-172-31-35-13 ~]$ mkdir -p playbook/roles/webserver/tasks
[ansible@ip-172-31-35-13 ~]$ tree
.
├── condition.yml
├── handler.yml
├── loops.yml
├── playbook
│   └── roles
│       └── webserver
│           └── tasks
├── target.yml
├── tasks.tml
└── vars.yml


mail.yml

 - name: install apache on redhat
   yum: pkg=httpd state=latest.
   

Now create a master file: master.yml
--- # Master Playbook
- hosts: all(demo)
user: ansible
become: yes
connection: ssh
role:
  - webserver
  
  



